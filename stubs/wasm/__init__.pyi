from .decode import decode_bytecode as decode_bytecode, decode_module as decode_module
from .formatter import format_function as format_function, format_instruction as format_instruction, format_lang_type as format_lang_type, format_mutability as format_mutability
from .immtypes import BlockImm as BlockImm, BranchImm as BranchImm, BranchTableImm as BranchTableImm, CallImm as CallImm, CallIndirectImm as CallIndirectImm, CurGrowMemImm as CurGrowMemImm, F32ConstImm as F32ConstImm, F64ConstImm as F64ConstImm, GlobalVarXsImm as GlobalVarXsImm, I32ConstImm as I32ConstImm, I64ConstImm as I64ConstImm, LocalVarXsImm as LocalVarXsImm, MemoryImm as MemoryImm
from .modtypes import CodeSection as CodeSection, DataSection as DataSection, DataSegment as DataSegment, ElementSection as ElementSection, ElementSegment as ElementSegment, ExportEntry as ExportEntry, ExportSection as ExportSection, FuncType as FuncType, FunctionBody as FunctionBody, FunctionImportEntryData as FunctionImportEntryData, FunctionSection as FunctionSection, GlobalEntry as GlobalEntry, GlobalSection as GlobalSection, GlobalType as GlobalType, ImportEntry as ImportEntry, ImportSection as ImportSection, InitExpr as InitExpr, LocalEntry as LocalEntry, LocalNameMap as LocalNameMap, LocalNames as LocalNames, MemorySection as MemorySection, MemoryType as MemoryType, ModuleHeader as ModuleHeader, NameMap as NameMap, NameSubSection as NameSubSection, Naming as Naming, ResizableLimits as ResizableLimits, Section as Section, StartSection as StartSection, TableSection as TableSection, TableType as TableType, TypeSection as TypeSection
from .opcodes import INSN_BRANCH as INSN_BRANCH, INSN_ENTER_BLOCK as INSN_ENTER_BLOCK, INSN_LEAVE_BLOCK as INSN_LEAVE_BLOCK, INSN_NO_FLOW as INSN_NO_FLOW, Opcode as Opcode
from .wasmtypes import BlockTypeField as BlockTypeField, ElementTypeField as ElementTypeField, ExternalKindField as ExternalKindField, IMMUTABLE as IMMUTABLE, LANG_TYPE_ANYFUNC as LANG_TYPE_ANYFUNC, LANG_TYPE_EMPTY as LANG_TYPE_EMPTY, LANG_TYPE_F32 as LANG_TYPE_F32, LANG_TYPE_F64 as LANG_TYPE_F64, LANG_TYPE_FUNC as LANG_TYPE_FUNC, LANG_TYPE_I32 as LANG_TYPE_I32, LANG_TYPE_I64 as LANG_TYPE_I64, MUTABLE as MUTABLE, NAME_SUBSEC_FUNCTION as NAME_SUBSEC_FUNCTION, NAME_SUBSEC_LOCAL as NAME_SUBSEC_LOCAL, SEC_CODE as SEC_CODE, SEC_DATA as SEC_DATA, SEC_ELEMENT as SEC_ELEMENT, SEC_EXPORT as SEC_EXPORT, SEC_FUNCTION as SEC_FUNCTION, SEC_GLOBAL as SEC_GLOBAL, SEC_IMPORT as SEC_IMPORT, SEC_MEMORY as SEC_MEMORY, SEC_NAME as SEC_NAME, SEC_START as SEC_START, SEC_TABLE as SEC_TABLE, SEC_TYPE as SEC_TYPE, SEC_UNK as SEC_UNK, UInt16Field as UInt16Field, UInt32Field as UInt32Field, UInt64Field as UInt64Field, UInt8Field as UInt8Field, VAL_TYPE_F32 as VAL_TYPE_F32, VAL_TYPE_F64 as VAL_TYPE_F64, VAL_TYPE_I32 as VAL_TYPE_I32, VAL_TYPE_I64 as VAL_TYPE_I64, ValueTypeField as ValueTypeField, VarInt32Field as VarInt32Field, VarInt64Field as VarInt64Field, VarInt7Field as VarInt7Field, VarUInt1Field as VarUInt1Field, VarUInt32Field as VarUInt32Field, VarUInt7Field as VarUInt7Field

OP_UNREACHABLE: Opcode
OP_NOP: Opcode
OP_BLOCK: Opcode
OP_LOOP: Opcode
OP_IF: Opcode
OP_ELSE: Opcode
OP_END: Opcode
OP_BR: Opcode
OP_BR_IF: Opcode
OP_BR_TABLE: Opcode
OP_RETURN: Opcode
OP_CALL: Opcode
OP_CALL_INDIRECT: Opcode
OP_DROP: Opcode
OP_SELECT: Opcode
OP_GET_LOCAL: Opcode
OP_SET_LOCAL: Opcode
OP_TEE_LOCAL: Opcode
OP_GET_GLOBAL: Opcode
OP_SET_GLOBAL: Opcode
OP_I32_LOAD: Opcode
OP_I64_LOAD: Opcode
OP_F32_LOAD: Opcode
OP_F64_LOAD: Opcode
OP_I32_LOAD8_S: Opcode
OP_I32_LOAD8_U: Opcode
OP_I32_LOAD16_S: Opcode
OP_I32_LOAD16_U: Opcode
OP_I64_LOAD8_S: Opcode
OP_I64_LOAD8_U: Opcode
OP_I64_LOAD16_S: Opcode
OP_I64_LOAD16_U: Opcode
OP_I64_LOAD32_S: Opcode
OP_I64_LOAD32_U: Opcode
OP_I32_STORE: Opcode
OP_I64_STORE: Opcode
OP_F32_STORE: Opcode
OP_F64_STORE: Opcode
OP_I32_STORE8: Opcode
OP_I32_STORE16: Opcode
OP_I64_STORE8: Opcode
OP_I64_STORE16: Opcode
OP_I64_STORE32: Opcode
OP_CURRENT_MEMORY: Opcode
OP_GROW_MEMORY: Opcode
OP_I32_CONST: Opcode
OP_I64_CONST: Opcode
OP_F32_CONST: Opcode
OP_F64_CONST: Opcode
OP_I32_EQZ: Opcode
OP_I32_EQ: Opcode
OP_I32_NE: Opcode
OP_I32_LT_S: Opcode
OP_I32_LT_U: Opcode
OP_I32_GT_S: Opcode
OP_I32_GT_U: Opcode
OP_I32_LE_S: Opcode
OP_I32_LE_U: Opcode
OP_I32_GE_S: Opcode
OP_I32_GE_U: Opcode
OP_I64_EQZ: Opcode
OP_I64_EQ: Opcode
OP_I64_NE: Opcode
OP_I64_LT_S: Opcode
OP_I64_LT_U: Opcode
OP_I64_GT_S: Opcode
OP_I64_GT_U: Opcode
OP_I64_LE_S: Opcode
OP_I64_LE_U: Opcode
OP_I64_GE_S: Opcode
OP_I64_GE_U: Opcode
OP_F32_EQ: Opcode
OP_F32_NE: Opcode
OP_F32_LT: Opcode
OP_F32_GT: Opcode
OP_F32_LE: Opcode
OP_F32_GE: Opcode
OP_F64_EQ: Opcode
OP_F64_NE: Opcode
OP_F64_LT: Opcode
OP_F64_GT: Opcode
OP_F64_LE: Opcode
OP_F64_GE: Opcode
OP_I32_CLZ: Opcode
OP_I32_CTZ: Opcode
OP_I32_POPCNT: Opcode
OP_I32_ADD: Opcode
OP_I32_SUB: Opcode
OP_I32_MUL: Opcode
OP_I32_DIV_S: Opcode
OP_I32_DIV_U: Opcode
OP_I32_REM_S: Opcode
OP_I32_REM_U: Opcode
OP_I32_AND: Opcode
OP_I32_OR: Opcode
OP_I32_XOR: Opcode
OP_I32_SHL: Opcode
OP_I32_SHR_S: Opcode
OP_I32_SHR_U: Opcode
OP_I32_ROTL: Opcode
OP_I32_ROTR: Opcode
OP_I64_CLZ: Opcode
OP_I64_CTZ: Opcode
OP_I64_POPCNT: Opcode
OP_I64_ADD: Opcode
OP_I64_SUB: Opcode
OP_I64_MUL: Opcode
OP_I64_DIV_S: Opcode
OP_I64_DIV_U: Opcode
OP_I64_REM_S: Opcode
OP_I64_REM_U: Opcode
OP_I64_AND: Opcode
OP_I64_OR: Opcode
OP_I64_XOR: Opcode
OP_I64_SHL: Opcode
OP_I64_SHR_S: Opcode
OP_I64_SHR_U: Opcode
OP_I64_ROTL: Opcode
OP_I64_ROTR: Opcode
OP_F32_ABS: Opcode
OP_F32_NEG: Opcode
OP_F32_CEIL: Opcode
OP_F32_FLOOR: Opcode
OP_F32_TRUNC: Opcode
OP_F32_NEAREST: Opcode
OP_F32_SQRT: Opcode
OP_F32_ADD: Opcode
OP_F32_SUB: Opcode
OP_F32_MUL: Opcode
OP_F32_DIV: Opcode
OP_F32_MIN: Opcode
OP_F32_MAX: Opcode
OP_F32_COPYSIGN: Opcode
OP_F64_ABS: Opcode
OP_F64_NEG: Opcode
OP_F64_CEIL: Opcode
OP_F64_FLOOR: Opcode
OP_F64_TRUNC: Opcode
OP_F64_NEAREST: Opcode
OP_F64_SQRT: Opcode
OP_F64_ADD: Opcode
OP_F64_SUB: Opcode
OP_F64_MUL: Opcode
OP_F64_DIV: Opcode
OP_F64_MIN: Opcode
OP_F64_MAX: Opcode
OP_F64_COPYSIGN: Opcode
OP_I32_WRAP_I64: Opcode
OP_I32_TRUNC_S_F32: Opcode
OP_I32_TRUNC_U_F32: Opcode
OP_I32_TRUNC_S_F64: Opcode
OP_I32_TRUNC_U_F64: Opcode
OP_I64_EXTEND_S_I32: Opcode
OP_I64_EXTEND_U_I32: Opcode
OP_I64_TRUNC_S_F32: Opcode
OP_I64_TRUNC_U_F32: Opcode
OP_I64_TRUNC_S_F64: Opcode
OP_I64_TRUNC_U_F64: Opcode
OP_F32_CONVERT_S_I32: Opcode
OP_F32_CONVERT_U_I32: Opcode
OP_F32_CONVERT_S_I64: Opcode
OP_F32_CONVERT_U_I64: Opcode
OP_F32_DEMOTE_F64: Opcode
OP_F64_CONVERT_S_I32: Opcode
OP_F64_CONVERT_U_I32: Opcode
OP_F64_CONVERT_S_I64: Opcode
OP_F64_CONVERT_U_I64: Opcode
OP_F64_PROMOTE_F32: Opcode
OP_I32_REINTERPRET_F32: Opcode
OP_I64_REINTERPRET_F64: Opcode
OP_F32_REINTERPRET_I32: Opcode
OP_F64_REINTERPRET_I64: Opcode
